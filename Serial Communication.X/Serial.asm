;***************************************************************************
;
;	    Filename: Serial.asm
;	    Date: 09/30/2024
;	    File Version: 1
;	    Author: Owen Fujii
;	    Company: Idaho State University
;	    Description: A program for asynchronous communication via EUSART
;			External connection through Visual Studio
;
;*************************************************************************
	
;*************************************************************************
; 
;	    Revision History:
;   
;	    Modified as listed
;	    Started 10/10/2024-	10/18/2024
;
;*************************************************************************
;
;	Recieving Bytes: Byte 1: $ / Start character
;			 Byte 2: PW for Servo
;			 Byte 3: ADC Select
;	Transmission Bytes
;			 Byte 1: $ / Start character
;			 Byte 2: MSBs of ADC Converstion
;			 Byte 3: LSBs of ADC Converstion
;*************************************************************************
    	;Basic Setup File for the PIC16F883

		#INCLUDE <p16f883.inc>        		; processor specific variable definitions
		#INCLUDE <SerialSetup.inc>
		#INCLUDE <SerialPOPout.inc>
		#INCLUDE <SerialPUSHin.inc>
		#INCLUDE <AN12ADC.INC>
		#INCLUDE <AN10ADC.INC>
		LIST      p=16f883		  	; list directive to define processor
		errorlevel -302,-207,-305,-206,-203	;suppress "not in bank 0" message,  Found label after column 1,
							;Using default destination of 1 (file),  Found call to macro in column 1

		#include "p16f883.inc"

; CONFIG1
; __config 0xF8E7
 __CONFIG _CONFIG1, _FOSC_XT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
;******************************************		
;Define Constants
;******************************************

#Define 	BAUD		D'100'				;Desired Baud Rate in Kbps for I2C
#Define		FOSC		D'16000'			;Oscillator Clock in KHz This must be filled
 
	    STORESTART      EQU H'22'
	    STORE	    EQU H'23'
	    CHSTART	    EQU H'24'
	    BUFFER	    EQU H'25'
	    DUMMY	    EQU H'26'
	    TXWAIT	    EQU H'27'
	    WAITCNT	    EQU H'28'
	    TEMP	    EQU H'29'
	    BYTHREE	    EQU H'30'
	    ENAN12	    EQU H'31'
	    ENAN10	    EQU H'32'
	    
       
 ; GPR 20 and 21 are used for interrupt save
 
		ORG H'000'					
		GOTO SETUP					;RESET CONDITION GOTO SETUP
		ORG H'004'
		GOTO INTER
	
SETUP
	CALL START
	BANKSEL BAUDCTL
	CLRF BAUDCTL	    ; SET BAUDRATE
	BSF BAUDCTL,1
	BANKSEL SPBRG
	MOVLW H'19'
	MOVWF SPBRG
	BANKSEL PIE1
	MOVLW H'23'
	MOVWF PIE1	    ; ENABLE RECIEVE INTERRUPT
	MOVLW H'04'
	MOVWF TXSTA
	BANKSEL RCSTA
	CLRF BUFFER	    ; CLEAR GPRS
	CLRF DUMMY
	CLRF STORE
	CLRF STORE
	CLRF CHSTART
	CLRF ENAN12
	CLRF ENAN10
	MOVLW H'32' 
	MOVWF STORE
	MOVLW H'24'	    ; STORE $ CHR
	MOVWF CHSTART
	MOVLW H'01'
	MOVWF ENAN12
	MOVLW H'02'
	MOVWF ENAN10
	BANKSEL PR2
	MOVLW H'20'	    ; SET MIN PULSEWIDTH
	MOVWF PR2
	CALL TMRSTART	    ; START TMR2
	BANKSEL RCSTA	    ; INIT 
	CLRF RCREG
	MOVLW H'80'         ; SET RECIEVE AS ACTIVE WITH A 9600 BAUD RATE
	MOVWF RCSTA
	BSF RCSTA,CREN
	BANKSEL INTCON
	BSF INTCON,7
	BSF INTCON,6
	GOTO MAIN
		
MAIN
	BANKSEL PORTA
	BTFSC RCSTA,1	; POLL OVERRUN ERROR
	CALL AUTORESET
	BTFSS BUFFER,2
	GOTO MAIN
	CLRF PORTA
	MOVF STORESTART,0
	BCF STATUS,Z
	SUBWF CHSTART,0	; SEE IF FIRST TRANSMISSION IF VALID
	BTFSC STATUS,Z
	CALL UPDATEPW	
	MOVF BYTHREE,0
	BCF STATUS,Z
	SUBWF ENAN12,0	; SEE IF ADC HAS BEEN REQUESTED
	BTFSC STATUS,Z	
	BSF TXWAIT,0	; SET TRANSMISSION FLAG
	MOVF BYTHREE,0
	BCF STATUS,Z
	SUBWF ENAN10,0
	BTFSC STATUS,Z
	BSF TXWAIT,1
	GOTO MAIN
	
AUTORESET
	BANKSEL RCSTA
	BCF RCSTA,4	; CLEAR CREN TO CLEAR OERR
	CLRF BUFFER
	CLRF ADRESH
	CLRF BYTHREE
	CLRF STORESTART
	CLRF STORE
	BSF STATUS,RP0
	CLRF ADRESL
	BCF STATUS,RP0
	BSF RCSTA,4
	RETURN
	
		
UPDATEPW
	BCF STATUS,RP0	    
	CLRF INTCON
	BCF T2CON,2	; DISABLE TMR2
	MOVF STORE,0
	BANKSEL PR2	; LOAD IN NEW 
	MOVWF PR2
	BCF STATUS,RP0
	CLRF STORESTART
	CLRF BUFFER
	CLRF STORE
	BSF T2CON,2
	BSF INTCON,7
	BSF INTCON,6
	RETURN
		
TMRSTART                   	
	BANKSEL TMR2
	CLRF TMR2	; CLEAR TMR2
	MOVLW H'02'     ; CONFIGURE TMR2
	MOVWF T2CON
	BSF T2CON,2	; ENABLE TMR2
	BSF PORTC,0	; SET OUTPUT HIGH
	RETURN
		
PS                 ; ERROR IS HERE. EVERYTHING ELSE WORKS
	BANKSEL T2CON
	CLRF INTCON
	BCF T2CON,2	    ; DISABLE TMR2  
	BCF PORTC,0
	BCF PIR1,1          
	CLRF T1CON          ; SET T1CON 
	MOVLW H'B1'	    ; OFFSET TMR1 FOR A COUNT OF 20K FOR ROLLOVER
	MOVWF TMR1H
	MOVLW H'E3'
	MOVWF TMR1L
	BSF T1CON,0  
	BTFSC TXWAIT,0	    ; CHECK IF AN OUTPUT TRANSMISSION
	CALL ADCRESTART	    ; HAS BEEN REQUESTED
	BTFSC TXWAIT,1
	CALL ADCRESTART
	RETURN
	
ADCRESTART
	BCF STATUS,RP0
	BTFSC TXWAIT,0
	CALL AN12	    ; INIT ANALOG AND START CONVERT
	BTFSC TXWAIT,1
	CALL AN10
	BSF PORTA,0
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	BTFSC ADCON0,1	    ; POLL THE GO/DONE
	GOTO $-1
	CALL TXADCSTART	    ; START TRANSMISSION
	CLRF BYTHREE
	CLRF TXWAIT	    ; ACKNOWLEDGE TRANSMIT IS DONE
	RETURN
	
RESTART
	BANKSEL T1CON
	CLRF INTCON
	BCF T1CON,0	    ; DISABLE TMR1
	BCF PIR1,0	    ; CLEAR INT FLAG
	CALL TMRSTART
	BSF INTCON,7
	BSF INTCON,6
	RETURN
	
INTER
	BCF STATUS,RP0
	CALL PUSHIN
	CLRF INTCON
	BTFSC PIR1,5	    ; DATA HAS BEEN RECIEVED
	CALL RECIEVE
	BTFSC PIR1,1	    ; TMR2 HAS ELAPSED
	CALL PS
	BTFSC PIR1,0	    ; TMR1 HAS ELAPSED
	CALL RESTART
	BCF STATUS,RP0
	BSF INTCON,7
	BSF INTCON,6
	CALL POPOUT
	RETFIE
		
RECIEVE	
	BCF STATUS,RP0
	CLRF TEMP
	MOVF RCREG,0	    ; READ INCOMING BYTE
	MOVWF TEMP	    ; STORE IN GPR
	BSF PORTA,0
	BTFSC BUFFER,1
	GOTO BYTETWO	    
	BTFSC BUFFER,0
	GOTO BYTEONE
	CLRF BUFFER	    
	MOVF TEMP,0
	MOVWF STORESTART
	BSF BUFFER,0	    ; ONE BYTE HAS BEEN RECIEVED
	BCF PORTA,0
	RETURN
	
BYTEONE
	MOVF TEMP,0
	MOVWF STORE
	BSF BUFFER,1	    ; TWO BYTES HAVE BEEN RECIEVED
	BCF PORTA,0
	RETURN
	
BYTETWO
	MOVF TEMP,0
	MOVWF BYTHREE
	BSF BUFFER,2	    ; THREE BYTES HAVE BEEN RECIEVED
	BCF PORTA,0
	RETURN
	
TXADCSTART
	BANKSEL ADCON0
	CLRF PORTA
	BSF STATUS,RP0
	BSF TXSTA,5	    ; ENABLE TRANSMISSION
	BCF STATUS,RP0
	MOVF CHSTART,0	    ; MOVE START CHARACTER
	MOVWF TXREG	    
	MOVF ADRESH,0	    ; DOUBLE STACK TRANSMISION
	MOVWF TXREG
	BSF STATUS,RP0
STAY	
	BTFSS TXSTA,1	    ; WAIT FOR PRIOR BITS TO CLEAR
	GOTO STAY
	MOVF ADRESL,0	    ; LOAD LSBS OF CONVERSION
	BCF STATUS,RP0
	BSF PORTA,0
	MOVWF TXREG	    
	BSF STATUS,RP0
HOLD
	BTFSS TXSTA,1
	GOTO HOLD	    ; WAIT FOR TRANSMISSION TO FINISH
	BCF TXSTA,5	    ; DISABLE TRANSMIT
	CLRF ADRESL
	BCF STATUS,RP0
	CLRF ADRESH	    ; CLEAR REGISTERS
	BCF PORTA,0
	BCF PIR1,6
	BCF ADCON0,0
	BCF ADCON0,1
	RETURN
	
END


