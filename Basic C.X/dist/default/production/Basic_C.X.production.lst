

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Nov 14 11:07:54 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1788
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 25/07/2024 GMT
    16                           ; 
    17                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1788 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0008                     bsr             equ	8
    50     0005                     fsr0h           equ	5
    51     0004                     fsr0l           equ	4
    52     0007                     fsr1h           equ	7
    53     0006                     fsr1l           equ	6
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0001                     indf1           equ	1
    57     000B                     intcon          equ	11
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0009                     wreg            equ	9
    63     0000                     INDF0           equ	0	;# 
    64     0001                     INDF1           equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR0L           equ	4	;# 
    68     0005                     FSR0H           equ	5	;# 
    69     0006                     FSR1L           equ	6	;# 
    70     0007                     FSR1H           equ	7	;# 
    71     0008                     BSR             equ	8	;# 
    72     0009                     WREG            equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PORTA           equ	12	;# 
    76     000D                     PORTB           equ	13	;# 
    77     000E                     PORTC           equ	14	;# 
    78     0010                     PORTE           equ	16	;# 
    79     0011                     PIR1            equ	17	;# 
    80     0012                     PIR2            equ	18	;# 
    81     0013                     PIR3            equ	19	;# 
    82     0014                     PIR4            equ	20	;# 
    83     0015                     TMR0            equ	21	;# 
    84     0016                     TMR1            equ	22	;# 
    85     0016                     TMR1L           equ	22	;# 
    86     0017                     TMR1H           equ	23	;# 
    87     0018                     T1CON           equ	24	;# 
    88     0019                     T1GCON          equ	25	;# 
    89     001A                     TMR2            equ	26	;# 
    90     001B                     PR2             equ	27	;# 
    91     001C                     T2CON           equ	28	;# 
    92     008C                     TRISA           equ	140	;# 
    93     008D                     TRISB           equ	141	;# 
    94     008E                     TRISC           equ	142	;# 
    95     0090                     TRISE           equ	144	;# 
    96     0091                     PIE1            equ	145	;# 
    97     0092                     PIE2            equ	146	;# 
    98     0093                     PIE3            equ	147	;# 
    99     0094                     PIE4            equ	148	;# 
   100     0095                     OPTION_REG      equ	149	;# 
   101     0096                     PCON            equ	150	;# 
   102     0097                     WDTCON          equ	151	;# 
   103     0098                     OSCTUNE         equ	152	;# 
   104     0099                     OSCCON          equ	153	;# 
   105     009A                     OSCSTAT         equ	154	;# 
   106     009B                     ADRES           equ	155	;# 
   107     009B                     ADRESL          equ	155	;# 
   108     009C                     ADRESH          equ	156	;# 
   109     009D                     ADCON0          equ	157	;# 
   110     009E                     ADCON1          equ	158	;# 
   111     009F                     ADCON2          equ	159	;# 
   112     010C                     LATA            equ	268	;# 
   113     010D                     LATB            equ	269	;# 
   114     010E                     LATC            equ	270	;# 
   115     0111                     CM1CON0         equ	273	;# 
   116     0112                     CM1CON1         equ	274	;# 
   117     0113                     CM2CON0         equ	275	;# 
   118     0114                     CM2CON1         equ	276	;# 
   119     0115                     CMOUT           equ	277	;# 
   120     0116                     BORCON          equ	278	;# 
   121     0117                     FVRCON          equ	279	;# 
   122     0118                     DAC1CON0        equ	280	;# 
   123     0119                     DAC1CON1        equ	281	;# 
   124     011A                     CM4CON0         equ	282	;# 
   125     011B                     CM4CON1         equ	283	;# 
   126     011C                     APFCON2         equ	284	;# 
   127     011D                     APFCON1         equ	285	;# 
   128     011D                     APFCON0         equ	285	;# 
   129     011D                     APFCON          equ	285	;# 
   130     011E                     CM3CON0         equ	286	;# 
   131     011F                     CM3CON1         equ	287	;# 
   132     018C                     ANSELA          equ	396	;# 
   133     018D                     ANSELB          equ	397	;# 
   134     018E                     ANSELC          equ	398	;# 
   135     0191                     EEADR           equ	401	;# 
   136     0191                     EEADRL          equ	401	;# 
   137     0192                     EEADRH          equ	402	;# 
   138     0193                     EEDAT           equ	403	;# 
   139     0193                     EEDATL          equ	403	;# 
   140     0193                     EEDATA          equ	403	;# 
   141     0194                     EEDATH          equ	404	;# 
   142     0195                     EECON1          equ	405	;# 
   143     0196                     EECON2          equ	406	;# 
   144     0197                     VREGCON         equ	407	;# 
   145     0199                     RC1REG          equ	409	;# 
   146     0199                     RCREG           equ	409	;# 
   147     0199                     RCREG1          equ	409	;# 
   148     019A                     TX1REG          equ	410	;# 
   149     019A                     TXREG1          equ	410	;# 
   150     019A                     TXREG           equ	410	;# 
   151     019B                     SP1BRG          equ	411	;# 
   152     019B                     SPBRG           equ	411	;# 
   153     019B                     SP1BRGL         equ	411	;# 
   154     019B                     SPBRG1          equ	411	;# 
   155     019B                     SPBRGL          equ	411	;# 
   156     019C                     SP1BRGH         equ	412	;# 
   157     019C                     SPBRGH          equ	412	;# 
   158     019C                     SPBRGH1         equ	412	;# 
   159     019D                     RC1STA          equ	413	;# 
   160     019D                     RCSTA1          equ	413	;# 
   161     019D                     RCSTA           equ	413	;# 
   162     019E                     TX1STA          equ	414	;# 
   163     019E                     TXSTA1          equ	414	;# 
   164     019E                     TXSTA           equ	414	;# 
   165     019F                     BAUD1CON        equ	415	;# 
   166     019F                     BAUDCON1        equ	415	;# 
   167     019F                     BAUDCTL1        equ	415	;# 
   168     019F                     BAUDCON         equ	415	;# 
   169     019F                     BAUDCTL         equ	415	;# 
   170     020C                     WPUA            equ	524	;# 
   171     020D                     WPUB            equ	525	;# 
   172     020E                     WPUC            equ	526	;# 
   173     0210                     WPUE            equ	528	;# 
   174     0211                     SSP1BUF         equ	529	;# 
   175     0211                     SSPBUF          equ	529	;# 
   176     0212                     SSP1ADD         equ	530	;# 
   177     0212                     SSPADD          equ	530	;# 
   178     0213                     SSP1MSK         equ	531	;# 
   179     0213                     SSPMSK          equ	531	;# 
   180     0214                     SSP1STAT        equ	532	;# 
   181     0214                     SSPSTAT         equ	532	;# 
   182     0215                     SSP1CON1        equ	533	;# 
   183     0215                     SSPCON          equ	533	;# 
   184     0215                     SSPCON1         equ	533	;# 
   185     0215                     SSP1CON         equ	533	;# 
   186     0216                     SSP1CON2        equ	534	;# 
   187     0216                     SSPCON2         equ	534	;# 
   188     0217                     SSP1CON3        equ	535	;# 
   189     0217                     SSPCON3         equ	535	;# 
   190     028C                     ODCONA          equ	652	;# 
   191     028D                     ODCONB          equ	653	;# 
   192     028E                     ODCONC          equ	654	;# 
   193     0291                     CCPR1           equ	657	;# 
   194     0291                     CCPR1L          equ	657	;# 
   195     0292                     CCPR1H          equ	658	;# 
   196     0293                     CCP1CON         equ	659	;# 
   197     0298                     CCPR2           equ	664	;# 
   198     0298                     CCPR2L          equ	664	;# 
   199     0299                     CCPR2H          equ	665	;# 
   200     029A                     CCP2CON         equ	666	;# 
   201     030C                     SLRCONA         equ	780	;# 
   202     030D                     SLRCONB         equ	781	;# 
   203     030E                     SLRCONC         equ	782	;# 
   204     0311                     CCPR3           equ	785	;# 
   205     0311                     CCPR3L          equ	785	;# 
   206     0312                     CCPR3H          equ	786	;# 
   207     0313                     CCP3CON         equ	787	;# 
   208     038C                     INLVLA          equ	908	;# 
   209     038D                     INLVLB          equ	909	;# 
   210     038E                     INLVLC          equ	910	;# 
   211     0390                     INLVLE          equ	912	;# 
   212     0391                     IOCAP           equ	913	;# 
   213     0392                     IOCAN           equ	914	;# 
   214     0393                     IOCAF           equ	915	;# 
   215     0394                     IOCBP           equ	916	;# 
   216     0395                     IOCBN           equ	917	;# 
   217     0396                     IOCBF           equ	918	;# 
   218     0397                     IOCCP           equ	919	;# 
   219     0398                     IOCCN           equ	920	;# 
   220     0399                     IOCCF           equ	921	;# 
   221     039D                     IOCEP           equ	925	;# 
   222     039E                     IOCEN           equ	926	;# 
   223     039F                     IOCEF           equ	927	;# 
   224     0511                     OPA1CON         equ	1297	;# 
   225     0513                     OPA2CON         equ	1299	;# 
   226     051A                     CLKRCON         equ	1306	;# 
   227     0591                     DAC2CON0        equ	1425	;# 
   228     0592                     DAC2REF         equ	1426	;# 
   229     0592                     DAC2CON1        equ	1426	;# 
   230     0593                     DAC3CON0        equ	1427	;# 
   231     0594                     DAC3REF         equ	1428	;# 
   232     0594                     DAC3CON1        equ	1428	;# 
   233     0595                     DAC4CON0        equ	1429	;# 
   234     0596                     DAC4REF         equ	1430	;# 
   235     0596                     DAC4CON1        equ	1430	;# 
   236     0E91                     PSMC1CON        equ	3729	;# 
   237     0E92                     PSMC1MDL        equ	3730	;# 
   238     0E93                     PSMC1SYNC       equ	3731	;# 
   239     0E94                     PSMC1CLK        equ	3732	;# 
   240     0E95                     PSMC1OEN        equ	3733	;# 
   241     0E96                     PSMC1POL        equ	3734	;# 
   242     0E97                     PSMC1BLNK       equ	3735	;# 
   243     0E98                     PSMC1REBS       equ	3736	;# 
   244     0E99                     PSMC1FEBS       equ	3737	;# 
   245     0E9A                     PSMC1PHS        equ	3738	;# 
   246     0E9B                     PSMC1DCS        equ	3739	;# 
   247     0E9C                     PSMC1PRS        equ	3740	;# 
   248     0E9D                     PSMC1ASDC       equ	3741	;# 
   249     0E9E                     PSMC1ASDL       equ	3742	;# 
   250     0E9F                     PSMC1ASDS       equ	3743	;# 
   251     0EA0                     PSMC1INT        equ	3744	;# 
   252     0EA1                     PSMC1PH         equ	3745	;# 
   253     0EA1                     PSMC1PHL        equ	3745	;# 
   254     0EA2                     PSMC1PHH        equ	3746	;# 
   255     0EA3                     PSMC1DC         equ	3747	;# 
   256     0EA3                     PSMC1DCL        equ	3747	;# 
   257     0EA4                     PSMC1DCH        equ	3748	;# 
   258     0EA5                     PSMC1PR         equ	3749	;# 
   259     0EA5                     PSMC1PRL        equ	3749	;# 
   260     0EA6                     PSMC1PRH        equ	3750	;# 
   261     0EA7                     PSMC1TMR        equ	3751	;# 
   262     0EA7                     PSMC1TMRL       equ	3751	;# 
   263     0EA8                     PSMC1TMRH       equ	3752	;# 
   264     0EA9                     PSMC1DBR        equ	3753	;# 
   265     0EAA                     PSMC1DBF        equ	3754	;# 
   266     0EAB                     PSMC1BLKR       equ	3755	;# 
   267     0EAC                     PSMC1BLKF       equ	3756	;# 
   268     0EAD                     PSMC1FFA        equ	3757	;# 
   269     0EAE                     PSMC1STR0       equ	3758	;# 
   270     0EAF                     PSMC1STR1       equ	3759	;# 
   271     0EB1                     PSMC2CON        equ	3761	;# 
   272     0EB2                     PSMC2MDL        equ	3762	;# 
   273     0EB3                     PSMC2SYNC       equ	3763	;# 
   274     0EB4                     PSMC2CLK        equ	3764	;# 
   275     0EB5                     PSMC2OEN        equ	3765	;# 
   276     0EB6                     PSMC2POL        equ	3766	;# 
   277     0EB7                     PSMC2BLNK       equ	3767	;# 
   278     0EB8                     PSMC2REBS       equ	3768	;# 
   279     0EB9                     PSMC2FEBS       equ	3769	;# 
   280     0EBA                     PSMC2PHS        equ	3770	;# 
   281     0EBB                     PSMC2DCS        equ	3771	;# 
   282     0EBC                     PSMC2PRS        equ	3772	;# 
   283     0EBD                     PSMC2ASDC       equ	3773	;# 
   284     0EBE                     PSMC2ASDL       equ	3774	;# 
   285     0EBF                     PSMC2ASDS       equ	3775	;# 
   286     0EC0                     PSMC2INT        equ	3776	;# 
   287     0EC1                     PSMC2PH         equ	3777	;# 
   288     0EC1                     PSMC2PHL        equ	3777	;# 
   289     0EC2                     PSMC2PHH        equ	3778	;# 
   290     0EC3                     PSMC2DC         equ	3779	;# 
   291     0EC3                     PSMC2DCL        equ	3779	;# 
   292     0EC4                     PSMC2DCH        equ	3780	;# 
   293     0EC5                     PSMC2PR         equ	3781	;# 
   294     0EC5                     PSMC2PRL        equ	3781	;# 
   295     0EC6                     PSMC2PRH        equ	3782	;# 
   296     0EC7                     PSMC2TMR        equ	3783	;# 
   297     0EC7                     PSMC2TMRL       equ	3783	;# 
   298     0EC8                     PSMC2TMRH       equ	3784	;# 
   299     0EC9                     PSMC2DBR        equ	3785	;# 
   300     0ECA                     PSMC2DBF        equ	3786	;# 
   301     0ECB                     PSMC2BLKR       equ	3787	;# 
   302     0ECC                     PSMC2BLKF       equ	3788	;# 
   303     0ECD                     PSMC2FFA        equ	3789	;# 
   304     0ECE                     PSMC2STR0       equ	3790	;# 
   305     0ECF                     PSMC2STR1       equ	3791	;# 
   306     0ED1                     PSMC3CON        equ	3793	;# 
   307     0ED2                     PSMC3MDL        equ	3794	;# 
   308     0ED3                     PSMC3SYNC       equ	3795	;# 
   309     0ED4                     PSMC3CLK        equ	3796	;# 
   310     0ED5                     PSMC3OEN        equ	3797	;# 
   311     0ED6                     PSMC3POL        equ	3798	;# 
   312     0ED7                     PSMC3BLNK       equ	3799	;# 
   313     0ED8                     PSMC3REBS       equ	3800	;# 
   314     0ED9                     PSMC3FEBS       equ	3801	;# 
   315     0EDA                     PSMC3PHS        equ	3802	;# 
   316     0EDB                     PSMC3DCS        equ	3803	;# 
   317     0EDC                     PSMC3PRS        equ	3804	;# 
   318     0EDD                     PSMC3ASDC       equ	3805	;# 
   319     0EDE                     PSMC3ASDL       equ	3806	;# 
   320     0EDF                     PSMC3ASDS       equ	3807	;# 
   321     0EE0                     PSMC3INT        equ	3808	;# 
   322     0EE1                     PSMC3PH         equ	3809	;# 
   323     0EE1                     PSMC3PHL        equ	3809	;# 
   324     0EE2                     PSMC3PHH        equ	3810	;# 
   325     0EE3                     PSMC3DC         equ	3811	;# 
   326     0EE3                     PSMC3DCL        equ	3811	;# 
   327     0EE4                     PSMC3DCH        equ	3812	;# 
   328     0EE5                     PSMC3PR         equ	3813	;# 
   329     0EE5                     PSMC3PRL        equ	3813	;# 
   330     0EE6                     PSMC3PRH        equ	3814	;# 
   331     0EE7                     PSMC3TMR        equ	3815	;# 
   332     0EE7                     PSMC3TMRL       equ	3815	;# 
   333     0EE8                     PSMC3TMRH       equ	3816	;# 
   334     0EE9                     PSMC3DBR        equ	3817	;# 
   335     0EEA                     PSMC3DBF        equ	3818	;# 
   336     0EEB                     PSMC3BLKR       equ	3819	;# 
   337     0EEC                     PSMC3BLKF       equ	3820	;# 
   338     0EED                     PSMC3FFA        equ	3821	;# 
   339     0EEE                     PSMC3STR0       equ	3822	;# 
   340     0EEF                     PSMC3STR1       equ	3823	;# 
   341     0F11                     PSMC4CON        equ	3857	;# 
   342     0F12                     PSMC4MDL        equ	3858	;# 
   343     0F13                     PSMC4SYNC       equ	3859	;# 
   344     0F14                     PSMC4CLK        equ	3860	;# 
   345     0F15                     PSMC4OEN        equ	3861	;# 
   346     0F16                     PSMC4POL        equ	3862	;# 
   347     0F17                     PSMC4BLNK       equ	3863	;# 
   348     0F18                     PSMC4REBS       equ	3864	;# 
   349     0F19                     PSMC4FEBS       equ	3865	;# 
   350     0F1A                     PSMC4PHS        equ	3866	;# 
   351     0F1B                     PSMC4DCS        equ	3867	;# 
   352     0F1C                     PSMC4PRS        equ	3868	;# 
   353     0F1D                     PSMC4ASDC       equ	3869	;# 
   354     0F1E                     PSMC4ASDL       equ	3870	;# 
   355     0F1F                     PSMC4ASDS       equ	3871	;# 
   356     0F20                     PSMC4INT        equ	3872	;# 
   357     0F21                     PSMC4PH         equ	3873	;# 
   358     0F21                     PSMC4PHL        equ	3873	;# 
   359     0F22                     PSMC4PHH        equ	3874	;# 
   360     0F23                     PSMC4DC         equ	3875	;# 
   361     0F23                     PSMC4DCL        equ	3875	;# 
   362     0F24                     PSMC4DCH        equ	3876	;# 
   363     0F25                     PSMC4PR         equ	3877	;# 
   364     0F25                     PSMC4PRL        equ	3877	;# 
   365     0F26                     PSMC4PRH        equ	3878	;# 
   366     0F27                     PSMC4TMR        equ	3879	;# 
   367     0F27                     PSMC4TMRL       equ	3879	;# 
   368     0F28                     PSMC4TMRH       equ	3880	;# 
   369     0F29                     PSMC4DBR        equ	3881	;# 
   370     0F2A                     PSMC4DBF        equ	3882	;# 
   371     0F2B                     PSMC4BLKR       equ	3883	;# 
   372     0F2C                     PSMC4BLKF       equ	3884	;# 
   373     0F2D                     PSMC4FFA        equ	3885	;# 
   374     0F2E                     PSMC4STR0       equ	3886	;# 
   375     0F2F                     PSMC4STR1       equ	3887	;# 
   376     0FE4                     STATUS_SHAD     equ	4068	;# 
   377     0FE5                     WREG_SHAD       equ	4069	;# 
   378     0FE6                     BSR_SHAD        equ	4070	;# 
   379     0FE7                     PCLATH_SHAD     equ	4071	;# 
   380     0FE8                     FSR0L_SHAD      equ	4072	;# 
   381     0FE9                     FSR0H_SHAD      equ	4073	;# 
   382     0FEA                     FSR1L_SHAD      equ	4074	;# 
   383     0FEB                     FSR1H_SHAD      equ	4075	;# 
   384     0FED                     STKPTR          equ	4077	;# 
   385     0FEE                     TOSL            equ	4078	;# 
   386     0FEF                     TOSH            equ	4079	;# 
   387     0000                     INDF0           equ	0	;# 
   388     0001                     INDF1           equ	1	;# 
   389     0002                     PCL             equ	2	;# 
   390     0003                     STATUS          equ	3	;# 
   391     0004                     FSR0L           equ	4	;# 
   392     0005                     FSR0H           equ	5	;# 
   393     0006                     FSR1L           equ	6	;# 
   394     0007                     FSR1H           equ	7	;# 
   395     0008                     BSR             equ	8	;# 
   396     0009                     WREG            equ	9	;# 
   397     000A                     PCLATH          equ	10	;# 
   398     000B                     INTCON          equ	11	;# 
   399     000C                     PORTA           equ	12	;# 
   400     000D                     PORTB           equ	13	;# 
   401     000E                     PORTC           equ	14	;# 
   402     0010                     PORTE           equ	16	;# 
   403     0011                     PIR1            equ	17	;# 
   404     0012                     PIR2            equ	18	;# 
   405     0013                     PIR3            equ	19	;# 
   406     0014                     PIR4            equ	20	;# 
   407     0015                     TMR0            equ	21	;# 
   408     0016                     TMR1            equ	22	;# 
   409     0016                     TMR1L           equ	22	;# 
   410     0017                     TMR1H           equ	23	;# 
   411     0018                     T1CON           equ	24	;# 
   412     0019                     T1GCON          equ	25	;# 
   413     001A                     TMR2            equ	26	;# 
   414     001B                     PR2             equ	27	;# 
   415     001C                     T2CON           equ	28	;# 
   416     008C                     TRISA           equ	140	;# 
   417     008D                     TRISB           equ	141	;# 
   418     008E                     TRISC           equ	142	;# 
   419     0090                     TRISE           equ	144	;# 
   420     0091                     PIE1            equ	145	;# 
   421     0092                     PIE2            equ	146	;# 
   422     0093                     PIE3            equ	147	;# 
   423     0094                     PIE4            equ	148	;# 
   424     0095                     OPTION_REG      equ	149	;# 
   425     0096                     PCON            equ	150	;# 
   426     0097                     WDTCON          equ	151	;# 
   427     0098                     OSCTUNE         equ	152	;# 
   428     0099                     OSCCON          equ	153	;# 
   429     009A                     OSCSTAT         equ	154	;# 
   430     009B                     ADRES           equ	155	;# 
   431     009B                     ADRESL          equ	155	;# 
   432     009C                     ADRESH          equ	156	;# 
   433     009D                     ADCON0          equ	157	;# 
   434     009E                     ADCON1          equ	158	;# 
   435     009F                     ADCON2          equ	159	;# 
   436     010C                     LATA            equ	268	;# 
   437     010D                     LATB            equ	269	;# 
   438     010E                     LATC            equ	270	;# 
   439     0111                     CM1CON0         equ	273	;# 
   440     0112                     CM1CON1         equ	274	;# 
   441     0113                     CM2CON0         equ	275	;# 
   442     0114                     CM2CON1         equ	276	;# 
   443     0115                     CMOUT           equ	277	;# 
   444     0116                     BORCON          equ	278	;# 
   445     0117                     FVRCON          equ	279	;# 
   446     0118                     DAC1CON0        equ	280	;# 
   447     0119                     DAC1CON1        equ	281	;# 
   448     011A                     CM4CON0         equ	282	;# 
   449     011B                     CM4CON1         equ	283	;# 
   450     011C                     APFCON2         equ	284	;# 
   451     011D                     APFCON1         equ	285	;# 
   452     011D                     APFCON0         equ	285	;# 
   453     011D                     APFCON          equ	285	;# 
   454     011E                     CM3CON0         equ	286	;# 
   455     011F                     CM3CON1         equ	287	;# 
   456     018C                     ANSELA          equ	396	;# 
   457     018D                     ANSELB          equ	397	;# 
   458     018E                     ANSELC          equ	398	;# 
   459     0191                     EEADR           equ	401	;# 
   460     0191                     EEADRL          equ	401	;# 
   461     0192                     EEADRH          equ	402	;# 
   462     0193                     EEDAT           equ	403	;# 
   463     0193                     EEDATL          equ	403	;# 
   464     0193                     EEDATA          equ	403	;# 
   465     0194                     EEDATH          equ	404	;# 
   466     0195                     EECON1          equ	405	;# 
   467     0196                     EECON2          equ	406	;# 
   468     0197                     VREGCON         equ	407	;# 
   469     0199                     RC1REG          equ	409	;# 
   470     0199                     RCREG           equ	409	;# 
   471     0199                     RCREG1          equ	409	;# 
   472     019A                     TX1REG          equ	410	;# 
   473     019A                     TXREG1          equ	410	;# 
   474     019A                     TXREG           equ	410	;# 
   475     019B                     SP1BRG          equ	411	;# 
   476     019B                     SPBRG           equ	411	;# 
   477     019B                     SP1BRGL         equ	411	;# 
   478     019B                     SPBRG1          equ	411	;# 
   479     019B                     SPBRGL          equ	411	;# 
   480     019C                     SP1BRGH         equ	412	;# 
   481     019C                     SPBRGH          equ	412	;# 
   482     019C                     SPBRGH1         equ	412	;# 
   483     019D                     RC1STA          equ	413	;# 
   484     019D                     RCSTA1          equ	413	;# 
   485     019D                     RCSTA           equ	413	;# 
   486     019E                     TX1STA          equ	414	;# 
   487     019E                     TXSTA1          equ	414	;# 
   488     019E                     TXSTA           equ	414	;# 
   489     019F                     BAUD1CON        equ	415	;# 
   490     019F                     BAUDCON1        equ	415	;# 
   491     019F                     BAUDCTL1        equ	415	;# 
   492     019F                     BAUDCON         equ	415	;# 
   493     019F                     BAUDCTL         equ	415	;# 
   494     020C                     WPUA            equ	524	;# 
   495     020D                     WPUB            equ	525	;# 
   496     020E                     WPUC            equ	526	;# 
   497     0210                     WPUE            equ	528	;# 
   498     0211                     SSP1BUF         equ	529	;# 
   499     0211                     SSPBUF          equ	529	;# 
   500     0212                     SSP1ADD         equ	530	;# 
   501     0212                     SSPADD          equ	530	;# 
   502     0213                     SSP1MSK         equ	531	;# 
   503     0213                     SSPMSK          equ	531	;# 
   504     0214                     SSP1STAT        equ	532	;# 
   505     0214                     SSPSTAT         equ	532	;# 
   506     0215                     SSP1CON1        equ	533	;# 
   507     0215                     SSPCON          equ	533	;# 
   508     0215                     SSPCON1         equ	533	;# 
   509     0215                     SSP1CON         equ	533	;# 
   510     0216                     SSP1CON2        equ	534	;# 
   511     0216                     SSPCON2         equ	534	;# 
   512     0217                     SSP1CON3        equ	535	;# 
   513     0217                     SSPCON3         equ	535	;# 
   514     028C                     ODCONA          equ	652	;# 
   515     028D                     ODCONB          equ	653	;# 
   516     028E                     ODCONC          equ	654	;# 
   517     0291                     CCPR1           equ	657	;# 
   518     0291                     CCPR1L          equ	657	;# 
   519     0292                     CCPR1H          equ	658	;# 
   520     0293                     CCP1CON         equ	659	;# 
   521     0298                     CCPR2           equ	664	;# 
   522     0298                     CCPR2L          equ	664	;# 
   523     0299                     CCPR2H          equ	665	;# 
   524     029A                     CCP2CON         equ	666	;# 
   525     030C                     SLRCONA         equ	780	;# 
   526     030D                     SLRCONB         equ	781	;# 
   527     030E                     SLRCONC         equ	782	;# 
   528     0311                     CCPR3           equ	785	;# 
   529     0311                     CCPR3L          equ	785	;# 
   530     0312                     CCPR3H          equ	786	;# 
   531     0313                     CCP3CON         equ	787	;# 
   532     038C                     INLVLA          equ	908	;# 
   533     038D                     INLVLB          equ	909	;# 
   534     038E                     INLVLC          equ	910	;# 
   535     0390                     INLVLE          equ	912	;# 
   536     0391                     IOCAP           equ	913	;# 
   537     0392                     IOCAN           equ	914	;# 
   538     0393                     IOCAF           equ	915	;# 
   539     0394                     IOCBP           equ	916	;# 
   540     0395                     IOCBN           equ	917	;# 
   541     0396                     IOCBF           equ	918	;# 
   542     0397                     IOCCP           equ	919	;# 
   543     0398                     IOCCN           equ	920	;# 
   544     0399                     IOCCF           equ	921	;# 
   545     039D                     IOCEP           equ	925	;# 
   546     039E                     IOCEN           equ	926	;# 
   547     039F                     IOCEF           equ	927	;# 
   548     0511                     OPA1CON         equ	1297	;# 
   549     0513                     OPA2CON         equ	1299	;# 
   550     051A                     CLKRCON         equ	1306	;# 
   551     0591                     DAC2CON0        equ	1425	;# 
   552     0592                     DAC2REF         equ	1426	;# 
   553     0592                     DAC2CON1        equ	1426	;# 
   554     0593                     DAC3CON0        equ	1427	;# 
   555     0594                     DAC3REF         equ	1428	;# 
   556     0594                     DAC3CON1        equ	1428	;# 
   557     0595                     DAC4CON0        equ	1429	;# 
   558     0596                     DAC4REF         equ	1430	;# 
   559     0596                     DAC4CON1        equ	1430	;# 
   560     0E91                     PSMC1CON        equ	3729	;# 
   561     0E92                     PSMC1MDL        equ	3730	;# 
   562     0E93                     PSMC1SYNC       equ	3731	;# 
   563     0E94                     PSMC1CLK        equ	3732	;# 
   564     0E95                     PSMC1OEN        equ	3733	;# 
   565     0E96                     PSMC1POL        equ	3734	;# 
   566     0E97                     PSMC1BLNK       equ	3735	;# 
   567     0E98                     PSMC1REBS       equ	3736	;# 
   568     0E99                     PSMC1FEBS       equ	3737	;# 
   569     0E9A                     PSMC1PHS        equ	3738	;# 
   570     0E9B                     PSMC1DCS        equ	3739	;# 
   571     0E9C                     PSMC1PRS        equ	3740	;# 
   572     0E9D                     PSMC1ASDC       equ	3741	;# 
   573     0E9E                     PSMC1ASDL       equ	3742	;# 
   574     0E9F                     PSMC1ASDS       equ	3743	;# 
   575     0EA0                     PSMC1INT        equ	3744	;# 
   576     0EA1                     PSMC1PH         equ	3745	;# 
   577     0EA1                     PSMC1PHL        equ	3745	;# 
   578     0EA2                     PSMC1PHH        equ	3746	;# 
   579     0EA3                     PSMC1DC         equ	3747	;# 
   580     0EA3                     PSMC1DCL        equ	3747	;# 
   581     0EA4                     PSMC1DCH        equ	3748	;# 
   582     0EA5                     PSMC1PR         equ	3749	;# 
   583     0EA5                     PSMC1PRL        equ	3749	;# 
   584     0EA6                     PSMC1PRH        equ	3750	;# 
   585     0EA7                     PSMC1TMR        equ	3751	;# 
   586     0EA7                     PSMC1TMRL       equ	3751	;# 
   587     0EA8                     PSMC1TMRH       equ	3752	;# 
   588     0EA9                     PSMC1DBR        equ	3753	;# 
   589     0EAA                     PSMC1DBF        equ	3754	;# 
   590     0EAB                     PSMC1BLKR       equ	3755	;# 
   591     0EAC                     PSMC1BLKF       equ	3756	;# 
   592     0EAD                     PSMC1FFA        equ	3757	;# 
   593     0EAE                     PSMC1STR0       equ	3758	;# 
   594     0EAF                     PSMC1STR1       equ	3759	;# 
   595     0EB1                     PSMC2CON        equ	3761	;# 
   596     0EB2                     PSMC2MDL        equ	3762	;# 
   597     0EB3                     PSMC2SYNC       equ	3763	;# 
   598     0EB4                     PSMC2CLK        equ	3764	;# 
   599     0EB5                     PSMC2OEN        equ	3765	;# 
   600     0EB6                     PSMC2POL        equ	3766	;# 
   601     0EB7                     PSMC2BLNK       equ	3767	;# 
   602     0EB8                     PSMC2REBS       equ	3768	;# 
   603     0EB9                     PSMC2FEBS       equ	3769	;# 
   604     0EBA                     PSMC2PHS        equ	3770	;# 
   605     0EBB                     PSMC2DCS        equ	3771	;# 
   606     0EBC                     PSMC2PRS        equ	3772	;# 
   607     0EBD                     PSMC2ASDC       equ	3773	;# 
   608     0EBE                     PSMC2ASDL       equ	3774	;# 
   609     0EBF                     PSMC2ASDS       equ	3775	;# 
   610     0EC0                     PSMC2INT        equ	3776	;# 
   611     0EC1                     PSMC2PH         equ	3777	;# 
   612     0EC1                     PSMC2PHL        equ	3777	;# 
   613     0EC2                     PSMC2PHH        equ	3778	;# 
   614     0EC3                     PSMC2DC         equ	3779	;# 
   615     0EC3                     PSMC2DCL        equ	3779	;# 
   616     0EC4                     PSMC2DCH        equ	3780	;# 
   617     0EC5                     PSMC2PR         equ	3781	;# 
   618     0EC5                     PSMC2PRL        equ	3781	;# 
   619     0EC6                     PSMC2PRH        equ	3782	;# 
   620     0EC7                     PSMC2TMR        equ	3783	;# 
   621     0EC7                     PSMC2TMRL       equ	3783	;# 
   622     0EC8                     PSMC2TMRH       equ	3784	;# 
   623     0EC9                     PSMC2DBR        equ	3785	;# 
   624     0ECA                     PSMC2DBF        equ	3786	;# 
   625     0ECB                     PSMC2BLKR       equ	3787	;# 
   626     0ECC                     PSMC2BLKF       equ	3788	;# 
   627     0ECD                     PSMC2FFA        equ	3789	;# 
   628     0ECE                     PSMC2STR0       equ	3790	;# 
   629     0ECF                     PSMC2STR1       equ	3791	;# 
   630     0ED1                     PSMC3CON        equ	3793	;# 
   631     0ED2                     PSMC3MDL        equ	3794	;# 
   632     0ED3                     PSMC3SYNC       equ	3795	;# 
   633     0ED4                     PSMC3CLK        equ	3796	;# 
   634     0ED5                     PSMC3OEN        equ	3797	;# 
   635     0ED6                     PSMC3POL        equ	3798	;# 
   636     0ED7                     PSMC3BLNK       equ	3799	;# 
   637     0ED8                     PSMC3REBS       equ	3800	;# 
   638     0ED9                     PSMC3FEBS       equ	3801	;# 
   639     0EDA                     PSMC3PHS        equ	3802	;# 
   640     0EDB                     PSMC3DCS        equ	3803	;# 
   641     0EDC                     PSMC3PRS        equ	3804	;# 
   642     0EDD                     PSMC3ASDC       equ	3805	;# 
   643     0EDE                     PSMC3ASDL       equ	3806	;# 
   644     0EDF                     PSMC3ASDS       equ	3807	;# 
   645     0EE0                     PSMC3INT        equ	3808	;# 
   646     0EE1                     PSMC3PH         equ	3809	;# 
   647     0EE1                     PSMC3PHL        equ	3809	;# 
   648     0EE2                     PSMC3PHH        equ	3810	;# 
   649     0EE3                     PSMC3DC         equ	3811	;# 
   650     0EE3                     PSMC3DCL        equ	3811	;# 
   651     0EE4                     PSMC3DCH        equ	3812	;# 
   652     0EE5                     PSMC3PR         equ	3813	;# 
   653     0EE5                     PSMC3PRL        equ	3813	;# 
   654     0EE6                     PSMC3PRH        equ	3814	;# 
   655     0EE7                     PSMC3TMR        equ	3815	;# 
   656     0EE7                     PSMC3TMRL       equ	3815	;# 
   657     0EE8                     PSMC3TMRH       equ	3816	;# 
   658     0EE9                     PSMC3DBR        equ	3817	;# 
   659     0EEA                     PSMC3DBF        equ	3818	;# 
   660     0EEB                     PSMC3BLKR       equ	3819	;# 
   661     0EEC                     PSMC3BLKF       equ	3820	;# 
   662     0EED                     PSMC3FFA        equ	3821	;# 
   663     0EEE                     PSMC3STR0       equ	3822	;# 
   664     0EEF                     PSMC3STR1       equ	3823	;# 
   665     0F11                     PSMC4CON        equ	3857	;# 
   666     0F12                     PSMC4MDL        equ	3858	;# 
   667     0F13                     PSMC4SYNC       equ	3859	;# 
   668     0F14                     PSMC4CLK        equ	3860	;# 
   669     0F15                     PSMC4OEN        equ	3861	;# 
   670     0F16                     PSMC4POL        equ	3862	;# 
   671     0F17                     PSMC4BLNK       equ	3863	;# 
   672     0F18                     PSMC4REBS       equ	3864	;# 
   673     0F19                     PSMC4FEBS       equ	3865	;# 
   674     0F1A                     PSMC4PHS        equ	3866	;# 
   675     0F1B                     PSMC4DCS        equ	3867	;# 
   676     0F1C                     PSMC4PRS        equ	3868	;# 
   677     0F1D                     PSMC4ASDC       equ	3869	;# 
   678     0F1E                     PSMC4ASDL       equ	3870	;# 
   679     0F1F                     PSMC4ASDS       equ	3871	;# 
   680     0F20                     PSMC4INT        equ	3872	;# 
   681     0F21                     PSMC4PH         equ	3873	;# 
   682     0F21                     PSMC4PHL        equ	3873	;# 
   683     0F22                     PSMC4PHH        equ	3874	;# 
   684     0F23                     PSMC4DC         equ	3875	;# 
   685     0F23                     PSMC4DCL        equ	3875	;# 
   686     0F24                     PSMC4DCH        equ	3876	;# 
   687     0F25                     PSMC4PR         equ	3877	;# 
   688     0F25                     PSMC4PRL        equ	3877	;# 
   689     0F26                     PSMC4PRH        equ	3878	;# 
   690     0F27                     PSMC4TMR        equ	3879	;# 
   691     0F27                     PSMC4TMRL       equ	3879	;# 
   692     0F28                     PSMC4TMRH       equ	3880	;# 
   693     0F29                     PSMC4DBR        equ	3881	;# 
   694     0F2A                     PSMC4DBF        equ	3882	;# 
   695     0F2B                     PSMC4BLKR       equ	3883	;# 
   696     0F2C                     PSMC4BLKF       equ	3884	;# 
   697     0F2D                     PSMC4FFA        equ	3885	;# 
   698     0F2E                     PSMC4STR0       equ	3886	;# 
   699     0F2F                     PSMC4STR1       equ	3887	;# 
   700     0FE4                     STATUS_SHAD     equ	4068	;# 
   701     0FE5                     WREG_SHAD       equ	4069	;# 
   702     0FE6                     BSR_SHAD        equ	4070	;# 
   703     0FE7                     PCLATH_SHAD     equ	4071	;# 
   704     0FE8                     FSR0L_SHAD      equ	4072	;# 
   705     0FE9                     FSR0H_SHAD      equ	4073	;# 
   706     0FEA                     FSR1L_SHAD      equ	4074	;# 
   707     0FEB                     FSR1H_SHAD      equ	4075	;# 
   708     0FED                     STKPTR          equ	4077	;# 
   709     0FEE                     TOSL            equ	4078	;# 
   710     0FEF                     TOSH            equ	4079	;# 
   711     000C                     _PORTAbits      set	12
   712     001C                     _T2CON          set	28
   713     0018                     _T1CON          set	24
   714     000E                     _PORTC          set	14
   715     000C                     _PORTA          set	12
   716     0063                     _RA3            set	99
   717     0062                     _RA2            set	98
   718     0061                     _RA1            set	97
   719     0060                     _RA0            set	96
   720     0092                     _PIE2           set	146
   721     0091                     _PIE1           set	145
   722     008E                     _TRISC          set	142
   723     008C                     _TRISA          set	140
   724     0099                     _OSCCONbits     set	153
   725     010C                     _LATA           set	268
   726     018E                     _ANSELC         set	398
   727     018C                     _ANSELA         set	396
   728     029A                     _CCP2CON        set	666
   729     0293                     _CCP1CON        set	659
   730                           
   731                           	psect	cinit
   732     07FB                     start_initialization:	
   733                           ; #config settings
   734                           
   735     07FB                     __initialization:
   736                           
   737                           ; Clear objects allocated to COMMON
   738     07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   739     07FC  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   740     07FD                     end_of_initialization:	
   741                           ;End of C runtime variable initialization code
   742                           
   743     07FD                     __end_of__initialization:
   744     07FD  0020               	movlb	0
   745     07FE  3187  2F1A         	ljmp	_main	;jump to C main() function
   746                           
   747                           	psect	bssCOMMON
   748     0077                     __pbssCOMMON:
   749     0077                     _button:
   750     0077                     	ds	2
   751                           
   752                           	psect	cstackCOMMON
   753     0070                     __pcstackCOMMON:
   754     0070                     ?_Setup:
   755     0070                     ?_Keypad_Check:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ?_Convert_To_Chr:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_Write_To_Port:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     Write_To_Port@write:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     Convert_To_Chr@temp:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ??_Setup:	
   771                           ; 2 bytes @ 0x0
   772                           
   773     0070                     ??_Keypad_Check:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ??_Write_To_Port:	
   777                           ; 1 bytes @ 0x0
   778                           
   779                           
   780                           ; 1 bytes @ 0x0
   781     0070                     	ds	2
   782     0072                     Convert_To_Chr@Key:
   783     0072                     ??_Convert_To_Chr:	
   784                           ; 1 bytes @ 0x2
   785                           
   786                           
   787                           ; 1 bytes @ 0x2
   788     0072                     	ds	1
   789     0073                     ?_main:
   790     0073                     main@argc:	
   791                           ; 2 bytes @ 0x3
   792                           
   793                           
   794                           ; 2 bytes @ 0x3
   795     0073                     	ds	2
   796     0075                     main@argv:
   797                           
   798                           ; 2 bytes @ 0x5
   799     0075                     	ds	2
   800     0077                     ??_main:
   801                           
   802                           	psect	maintext
   803     071A                     __pmaintext:	
   804                           ; 1 bytes @ 0x7
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 216 in file "C Template.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  argc            2    3[COMMON] int 
   813 ;;  argv            2    5[COMMON] PTR PTR unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2    3[COMMON] int 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B1F/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        4 bytes
   830 ;; Hardware stack levels required when called: 1
   831 ;; This function calls:
   832 ;;		_Convert_To_Chr
   833 ;;		_Keypad_Check
   834 ;;		_Setup
   835 ;;		_Write_To_Port
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     071A                     _main:	
   842                           ;psect for function _main
   843                           
   844     071A                     l842:	
   845                           ;incstack = 0
   846                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   847                           
   848                           
   849                           ;C Template.c: 217:     Setup();
   850     071A  3187  272D  3187   	fcall	_Setup
   851     071D                     l844:	
   852                           ;C Template.c: 218:     while (1 == 1)
   853                           
   854                           
   855                           ;C Template.c: 219:     {;C Template.c: 220:         Keypad_Check();
   856     071D  3187  274D  3187   	fcall	_Keypad_Check
   857                           
   858                           ;C Template.c: 221:         Write_To_Port(Convert_To_Chr(button));
   859     0720  0878               	movf	_button+1,w
   860     0721  00F1               	movwf	Convert_To_Chr@temp+1
   861     0722  0877               	movf	_button,w
   862     0723  00F0               	movwf	Convert_To_Chr@temp
   863     0724  3187  2711  3187   	fcall	_Convert_To_Chr
   864     0727  3187  2715  3187   	fcall	_Write_To_Port
   865     072A  2F1D               	goto	l844
   866     072B  3180  2802         	ljmp	start
   867     072D                     __end_of_main:
   868                           
   869                           	psect	text1
   870     0715                     __ptext1:	
   871 ;; *************** function _Write_To_Port *****************
   872 ;; Defined at:
   873 ;;		line 211 in file "C Template.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  write           1    wreg     unsigned char 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  write           1    0[COMMON] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     0715                     _Write_To_Port:	
   901                           ;psect for function _Write_To_Port
   902                           
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _Write_To_Port: [wreg]
   906                           ;Write_To_Port@write stored from wreg
   907     0715  00F0               	movwf	Write_To_Port@write
   908     0716                     l832:
   909                           
   910                           ;C Template.c: 211: void Write_To_Port(char write);C Template.c: 212: {;C Template.c: 21
      +                          3:     PORTC = write;
   911     0716  0870               	movf	Write_To_Port@write,w
   912     0717  0020               	movlb	0	; select bank0
   913     0718  008E               	movwf	14	;volatile
   914     0719                     l84:
   915     0719  0008               	return
   916     071A                     __end_of_Write_To_Port:
   917                           
   918                           	psect	text2
   919     072D                     __ptext2:	
   920 ;; *************** function _Setup *****************
   921 ;; Defined at:
   922 ;;		line 47 in file "C Template.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		status,2
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949     072D                     _Setup:	
   950                           ;psect for function _Setup
   951                           
   952     072D                     l700:	
   953                           ;incstack = 0
   954                           ; Regs used in _Setup: [status,2]
   955                           
   956                           
   957                           ;C Template.c: 50:     OSCCONbits.SPLLEN = 1;
   958     072D  0021               	movlb	1	; select bank1
   959     072E  1799               	bsf	25,7	;volatile
   960                           
   961                           ;C Template.c: 51:     OSCCONbits.IRCF3 = 1;
   962     072F  1719               	bsf	25,6	;volatile
   963                           
   964                           ;C Template.c: 52:     OSCCONbits.IRCF2 = 1;
   965     0730  1699               	bsf	25,5	;volatile
   966                           
   967                           ;C Template.c: 53:     OSCCONbits.IRCF1 = 0;
   968     0731  1219               	bcf	25,4	;volatile
   969                           
   970                           ;C Template.c: 54:     OSCCONbits.IRCF0 = 1;
   971     0732  1599               	bsf	25,3	;volatile
   972                           
   973                           ;C Template.c: 55:     OSCCONbits.SCS1 = 1;
   974     0733  1499               	bsf	25,1	;volatile
   975     0734                     l702:
   976                           
   977                           ;C Template.c: 59:     LATA = 0x00;
   978     0734  0022               	movlb	2	; select bank2
   979     0735  018C               	clrf	12	;volatile
   980     0736                     l704:
   981                           
   982                           ;C Template.c: 60:     TRISA = 0xF0;
   983     0736  30F0               	movlw	240
   984     0737  0021               	movlb	1	; select bank1
   985     0738  008C               	movwf	12	;volatile
   986                           
   987                           ;C Template.c: 61:     PORTA = 0x00;
   988     0739  0020               	movlb	0	; select bank0
   989     073A  018C               	clrf	12	;volatile
   990                           
   991                           ;C Template.c: 62:     ANSELA = 0x00;
   992     073B  0023               	movlb	3	; select bank3
   993     073C  018C               	clrf	12	;volatile
   994                           
   995                           ;C Template.c: 64:     ANSELC = 0x00;
   996     073D  018E               	clrf	14	;volatile
   997                           
   998                           ;C Template.c: 65:     TRISC = 0x00;
   999     073E  0021               	movlb	1	; select bank1
  1000     073F  018E               	clrf	14	;volatile
  1001     0740                     l706:
  1002                           
  1003                           ;C Template.c: 66:     PORTC = 0x23;
  1004     0740  3023               	movlw	35
  1005     0741  0020               	movlb	0	; select bank0
  1006     0742  008E               	movwf	14	;volatile
  1007                           
  1008                           ;C Template.c: 68:     PIE1 = 0x00;
  1009     0743  0021               	movlb	1	; select bank1
  1010     0744  0191               	clrf	17	;volatile
  1011                           
  1012                           ;C Template.c: 69:     PIE2 = 0x00;
  1013     0745  0192               	clrf	18	;volatile
  1014                           
  1015                           ;C Template.c: 70:     CCP1CON = 0x00;
  1016     0746  0025               	movlb	5	; select bank5
  1017     0747  0193               	clrf	19	;volatile
  1018                           
  1019                           ;C Template.c: 71:     CCP2CON = 0x00;
  1020     0748  019A               	clrf	26	;volatile
  1021                           
  1022                           ;C Template.c: 72:     T1CON = 0x00;
  1023     0749  0020               	movlb	0	; select bank0
  1024     074A  0198               	clrf	24	;volatile
  1025                           
  1026                           ;C Template.c: 73:     T2CON = 0x00;
  1027     074B  019C               	clrf	28	;volatile
  1028     074C                     l43:
  1029     074C  0008               	return
  1030     074D                     __end_of_Setup:
  1031                           
  1032                           	psect	text3
  1033     074D                     __ptext3:	
  1034 ;; *************** function _Keypad_Check *****************
  1035 ;; Defined at:
  1036 ;;		line 76 in file "C Template.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063     074D                     _Keypad_Check:	
  1064                           ;psect for function _Keypad_Check
  1065                           
  1066     074D                     l708:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _Keypad_Check: [wreg]
  1069                           
  1070     074D  018C               	clrf	12	;# 
  1071                           
  1072                           ;C Template.c: 85:     RA0 = 1;
  1073     074E  0020               	movlb	0	; select bank0
  1074     074F  140C               	bsf	12,0	;volatile
  1075                           
  1076                           ;C Template.c: 86:     if (PORTAbits.RA4 == 1)
  1077     0750  1E0C               	btfss	12,4	;volatile
  1078     0751  2F53               	goto	u11
  1079     0752  2F54               	goto	u10
  1080     0753                     u11:
  1081     0753  2F59               	goto	l46
  1082     0754                     u10:
  1083     0754                     l710:
  1084                           
  1085                           ;C Template.c: 87:     {;C Template.c: 88:         button = 48;
  1086     0754  3030               	movlw	48
  1087     0755  00F7               	movwf	_button
  1088     0756  3000               	movlw	0
  1089     0757  00F8               	movwf	_button+1
  1090     0758  2FFA               	goto	l47
  1091     0759                     l46:	
  1092                           ;C Template.c: 91:     else if (PORTAbits.RA5 == 1)
  1093                           
  1094     0759  1E8C               	btfss	12,5	;volatile
  1095     075A  2F5C               	goto	u21
  1096     075B  2F5D               	goto	u20
  1097     075C                     u21:
  1098     075C  2F62               	goto	l49
  1099     075D                     u20:
  1100     075D                     l716:
  1101                           
  1102                           ;C Template.c: 92:     {;C Template.c: 93:         button = 49;
  1103     075D  3031               	movlw	49
  1104     075E  00F7               	movwf	_button
  1105     075F  3000               	movlw	0
  1106     0760  00F8               	movwf	_button+1
  1107     0761  2FFA               	goto	l47
  1108     0762                     l49:	
  1109                           ;C Template.c: 96:     else if (PORTAbits.RA6 == 1)
  1110                           
  1111     0762  1F0C               	btfss	12,6	;volatile
  1112     0763  2F65               	goto	u31
  1113     0764  2F66               	goto	u30
  1114     0765                     u31:
  1115     0765  2F6B               	goto	l51
  1116     0766                     u30:
  1117     0766                     l722:
  1118                           
  1119                           ;C Template.c: 97:     {;C Template.c: 98:         button = 50;
  1120     0766  3032               	movlw	50
  1121     0767  00F7               	movwf	_button
  1122     0768  3000               	movlw	0
  1123     0769  00F8               	movwf	_button+1
  1124     076A  2FFA               	goto	l47
  1125     076B                     l51:	
  1126                           ;C Template.c: 101:     else if (PORTAbits.RA7 == 1)
  1127                           
  1128     076B  1F8C               	btfss	12,7	;volatile
  1129     076C  2F6E               	goto	u41
  1130     076D  2F6F               	goto	u40
  1131     076E                     u41:
  1132     076E  2F74               	goto	l734
  1133     076F                     u40:
  1134     076F                     l728:
  1135                           
  1136                           ;C Template.c: 102:     {;C Template.c: 103:         button = 51;
  1137     076F  3033               	movlw	51
  1138     0770  00F7               	movwf	_button
  1139     0771  3000               	movlw	0
  1140     0772  00F8               	movwf	_button+1
  1141     0773  2FFA               	goto	l47
  1142     0774                     l734:
  1143                           
  1144                           ;C Template.c: 107:     {;C Template.c: 108:         button = 35;
  1145     0774  3023               	movlw	35
  1146     0775  00F7               	movwf	_button
  1147     0776  3000               	movlw	0
  1148     0777  00F8               	movwf	_button+1
  1149     0778                     l48:
  1150     0778  018C               	clrf	12	;# 
  1151     0779                     l736:
  1152                           
  1153                           ;C Template.c: 113:     RA1 = 1;
  1154     0779  0020               	movlb	0	; select bank0
  1155     077A  148C               	bsf	12,1	;volatile
  1156     077B                     l738:
  1157                           
  1158                           ;C Template.c: 116:     if (PORTAbits.RA4 == 1)
  1159     077B  1E0C               	btfss	12,4	;volatile
  1160     077C  2F7E               	goto	u51
  1161     077D  2F7F               	goto	u50
  1162     077E                     u51:
  1163     077E  2F84               	goto	l55
  1164     077F                     u50:
  1165     077F                     l740:
  1166                           
  1167                           ;C Template.c: 117:     {;C Template.c: 118:         button = 52;
  1168     077F  3034               	movlw	52
  1169     0780  00F7               	movwf	_button
  1170     0781  3000               	movlw	0
  1171     0782  00F8               	movwf	_button+1
  1172     0783  2FFA               	goto	l47
  1173     0784                     l55:	
  1174                           ;C Template.c: 121:     else if (PORTAbits.RA5 == 1)
  1175                           
  1176     0784  1E8C               	btfss	12,5	;volatile
  1177     0785  2F87               	goto	u61
  1178     0786  2F88               	goto	u60
  1179     0787                     u61:
  1180     0787  2F8D               	goto	l57
  1181     0788                     u60:
  1182     0788                     l746:
  1183                           
  1184                           ;C Template.c: 122:     {;C Template.c: 123:         button = 53;
  1185     0788  3035               	movlw	53
  1186     0789  00F7               	movwf	_button
  1187     078A  3000               	movlw	0
  1188     078B  00F8               	movwf	_button+1
  1189     078C  2FFA               	goto	l47
  1190     078D                     l57:	
  1191                           ;C Template.c: 126:     else if (PORTAbits.RA6 == 1)
  1192                           
  1193     078D  1F0C               	btfss	12,6	;volatile
  1194     078E  2F90               	goto	u71
  1195     078F  2F91               	goto	u70
  1196     0790                     u71:
  1197     0790  2F96               	goto	l59
  1198     0791                     u70:
  1199     0791                     l752:
  1200                           
  1201                           ;C Template.c: 127:     {;C Template.c: 128:         button = 54;
  1202     0791  3036               	movlw	54
  1203     0792  00F7               	movwf	_button
  1204     0793  3000               	movlw	0
  1205     0794  00F8               	movwf	_button+1
  1206     0795  2FFA               	goto	l47
  1207     0796                     l59:	
  1208                           ;C Template.c: 131:     else if (PORTAbits.RA7 == 1)
  1209                           
  1210     0796  1F8C               	btfss	12,7	;volatile
  1211     0797  2F99               	goto	u81
  1212     0798  2F9A               	goto	u80
  1213     0799                     u81:
  1214     0799  2F9F               	goto	l764
  1215     079A                     u80:
  1216     079A                     l758:
  1217                           
  1218                           ;C Template.c: 132:     {;C Template.c: 133:         button = 55;
  1219     079A  3037               	movlw	55
  1220     079B  00F7               	movwf	_button
  1221     079C  3000               	movlw	0
  1222     079D  00F8               	movwf	_button+1
  1223     079E  2FFA               	goto	l47
  1224     079F                     l764:
  1225                           
  1226                           ;C Template.c: 137:     {;C Template.c: 138:         button = 35;
  1227     079F  3023               	movlw	35
  1228     07A0  00F7               	movwf	_button
  1229     07A1  3000               	movlw	0
  1230     07A2  00F8               	movwf	_button+1
  1231     07A3                     l56:
  1232     07A3  018C               	clrf	12	;# 
  1233     07A4                     l766:
  1234                           
  1235                           ;C Template.c: 142:     RA2 = 1;
  1236     07A4  0020               	movlb	0	; select bank0
  1237     07A5  150C               	bsf	12,2	;volatile
  1238     07A6                     l768:
  1239                           
  1240                           ;C Template.c: 144:     if (PORTAbits.RA4 == 1)
  1241     07A6  1E0C               	btfss	12,4	;volatile
  1242     07A7  2FA9               	goto	u91
  1243     07A8  2FAA               	goto	u90
  1244     07A9                     u91:
  1245     07A9  2FAF               	goto	l63
  1246     07AA                     u90:
  1247     07AA                     l770:
  1248                           
  1249                           ;C Template.c: 145:     {;C Template.c: 146:         button = 56;
  1250     07AA  3038               	movlw	56
  1251     07AB  00F7               	movwf	_button
  1252     07AC  3000               	movlw	0
  1253     07AD  00F8               	movwf	_button+1
  1254     07AE  2FFA               	goto	l47
  1255     07AF                     l63:	
  1256                           ;C Template.c: 149:     else if (PORTAbits.RA5 == 1)
  1257                           
  1258     07AF  1E8C               	btfss	12,5	;volatile
  1259     07B0  2FB2               	goto	u101
  1260     07B1  2FB3               	goto	u100
  1261     07B2                     u101:
  1262     07B2  2FB8               	goto	l65
  1263     07B3                     u100:
  1264     07B3                     l776:
  1265                           
  1266                           ;C Template.c: 150:     {;C Template.c: 151:         button = 57;
  1267     07B3  3039               	movlw	57
  1268     07B4  00F7               	movwf	_button
  1269     07B5  3000               	movlw	0
  1270     07B6  00F8               	movwf	_button+1
  1271     07B7  2FFA               	goto	l47
  1272     07B8                     l65:	
  1273                           ;C Template.c: 154:     else if (PORTAbits.RA6 == 1)
  1274                           
  1275     07B8  1F0C               	btfss	12,6	;volatile
  1276     07B9  2FBB               	goto	u111
  1277     07BA  2FBC               	goto	u110
  1278     07BB                     u111:
  1279     07BB  2FC1               	goto	l67
  1280     07BC                     u110:
  1281     07BC                     l782:
  1282                           
  1283                           ;C Template.c: 155:     {;C Template.c: 156:         button = 65;
  1284     07BC  3041               	movlw	65
  1285     07BD  00F7               	movwf	_button
  1286     07BE  3000               	movlw	0
  1287     07BF  00F8               	movwf	_button+1
  1288     07C0  2FFA               	goto	l47
  1289     07C1                     l67:	
  1290                           ;C Template.c: 159:     else if (PORTAbits.RA7 == 1)
  1291                           
  1292     07C1  1F8C               	btfss	12,7	;volatile
  1293     07C2  2FC4               	goto	u121
  1294     07C3  2FC5               	goto	u120
  1295     07C4                     u121:
  1296     07C4  2FCA               	goto	l794
  1297     07C5                     u120:
  1298     07C5                     l788:
  1299                           
  1300                           ;C Template.c: 160:     {;C Template.c: 161:         button = 66;
  1301     07C5  3042               	movlw	66
  1302     07C6  00F7               	movwf	_button
  1303     07C7  3000               	movlw	0
  1304     07C8  00F8               	movwf	_button+1
  1305     07C9  2FFA               	goto	l47
  1306     07CA                     l794:
  1307                           
  1308                           ;C Template.c: 165:     {;C Template.c: 166:         button = 35;
  1309     07CA  3023               	movlw	35
  1310     07CB  00F7               	movwf	_button
  1311     07CC  3000               	movlw	0
  1312     07CD  00F8               	movwf	_button+1
  1313     07CE                     l64:
  1314     07CE  018C               	clrf	12	;# 
  1315     07CF                     l796:
  1316                           
  1317                           ;C Template.c: 170:     RA3 = 1;
  1318     07CF  0020               	movlb	0	; select bank0
  1319     07D0  158C               	bsf	12,3	;volatile
  1320     07D1                     l798:
  1321                           
  1322                           ;C Template.c: 172:     if (PORTAbits.RA4 == 1)
  1323     07D1  1E0C               	btfss	12,4	;volatile
  1324     07D2  2FD4               	goto	u131
  1325     07D3  2FD5               	goto	u130
  1326     07D4                     u131:
  1327     07D4  2FDA               	goto	l71
  1328     07D5                     u130:
  1329     07D5                     l800:
  1330                           
  1331                           ;C Template.c: 173:     {;C Template.c: 174:         button = 67;
  1332     07D5  3043               	movlw	67
  1333     07D6  00F7               	movwf	_button
  1334     07D7  3000               	movlw	0
  1335     07D8  00F8               	movwf	_button+1
  1336     07D9  2FFA               	goto	l47
  1337     07DA                     l71:	
  1338                           ;C Template.c: 177:     else if (PORTAbits.RA5 == 1)
  1339                           
  1340     07DA  1E8C               	btfss	12,5	;volatile
  1341     07DB  2FDD               	goto	u141
  1342     07DC  2FDE               	goto	u140
  1343     07DD                     u141:
  1344     07DD  2FE3               	goto	l73
  1345     07DE                     u140:
  1346     07DE                     l806:
  1347                           
  1348                           ;C Template.c: 178:     {;C Template.c: 179:         button = 68;
  1349     07DE  3044               	movlw	68
  1350     07DF  00F7               	movwf	_button
  1351     07E0  3000               	movlw	0
  1352     07E1  00F8               	movwf	_button+1
  1353     07E2  2FFA               	goto	l47
  1354     07E3                     l73:	
  1355                           ;C Template.c: 182:     else if (PORTAbits.RA6 == 1)
  1356                           
  1357     07E3  1F0C               	btfss	12,6	;volatile
  1358     07E4  2FE6               	goto	u151
  1359     07E5  2FE7               	goto	u150
  1360     07E6                     u151:
  1361     07E6  2FEC               	goto	l75
  1362     07E7                     u150:
  1363     07E7                     l812:
  1364                           
  1365                           ;C Template.c: 183:     {;C Template.c: 184:         button = 69;
  1366     07E7  3045               	movlw	69
  1367     07E8  00F7               	movwf	_button
  1368     07E9  3000               	movlw	0
  1369     07EA  00F8               	movwf	_button+1
  1370     07EB  2FFA               	goto	l47
  1371     07EC                     l75:	
  1372                           ;C Template.c: 187:     else if (PORTAbits.RA7 == 1)
  1373                           
  1374     07EC  1F8C               	btfss	12,7	;volatile
  1375     07ED  2FEF               	goto	u161
  1376     07EE  2FF0               	goto	u160
  1377     07EF                     u161:
  1378     07EF  2FF5               	goto	l824
  1379     07F0                     u160:
  1380     07F0                     l818:
  1381                           
  1382                           ;C Template.c: 188:     {;C Template.c: 189:         button = 70;
  1383     07F0  3046               	movlw	70
  1384     07F1  00F7               	movwf	_button
  1385     07F2  3000               	movlw	0
  1386     07F3  00F8               	movwf	_button+1
  1387     07F4  2FFA               	goto	l47
  1388     07F5                     l824:
  1389                           
  1390                           ;C Template.c: 193:     {;C Template.c: 194:         button = 35;
  1391     07F5  3023               	movlw	35
  1392     07F6  00F7               	movwf	_button
  1393     07F7  3000               	movlw	0
  1394     07F8  00F8               	movwf	_button+1
  1395     07F9  018C               	clrf	12	;# 
  1396     07FA                     l47:
  1397     07FA  0008               	return
  1398     07FB                     __end_of_Keypad_Check:
  1399                           
  1400                           	psect	text4
  1401     0711                     __ptext4:	
  1402 ;; *************** function _Convert_To_Chr *****************
  1403 ;; Defined at:
  1404 ;;		line 202 in file "C Template.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  temp            2    0[COMMON] int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  Key             1    2[COMMON] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1422 ;;Total ram usage:        3 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431     0711                     _Convert_To_Chr:	
  1432                           ;psect for function _Convert_To_Chr
  1433                           
  1434     0711                     l838:	
  1435                           ;incstack = 0
  1436                           ; Regs used in _Convert_To_Chr: [wreg]
  1437                           
  1438                           
  1439                           ;C Template.c: 202: char Convert_To_Chr(int temp);C Template.c: 205: {;C Template.c: 206
      +                          :     char Key;;C Template.c: 207:         Key = (char)temp;
  1440     0711  0870               	movf	Convert_To_Chr@temp,w
  1441     0712  00F2               	movwf	Convert_To_Chr@Key
  1442                           
  1443                           ;C Template.c: 208:         return Key;
  1444     0713  0872               	movf	Convert_To_Chr@Key,w
  1445     0714                     l81:
  1446     0714  0008               	return
  1447     0715                     __end_of_Convert_To_Chr:
  1448     0003                     ___latbits      equ	3
  1449     007E                     btemp           set	126	;btemp
  1450     007E                     wtemp0          set	126
  1451                           
  1452                           	psect	config
  1453                           
  1454                           ;Config register CONFIG1 @ 0x8007
  1455                           ;	Oscillator Selection
  1456                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1457                           ;	Watchdog Timer Enable
  1458                           ;	WDTE = ON, WDT enabled
  1459                           ;	Power-up Timer Enable
  1460                           ;	PWRTE = OFF, PWRT disabled
  1461                           ;	MCLR Pin Function Select
  1462                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1463                           ;	Flash Program Memory Code Protection
  1464                           ;	CP = OFF, Program memory code protection is disabled
  1465                           ;	Data Memory Code Protection
  1466                           ;	CPD = OFF, Data memory code protection is disabled
  1467                           ;	Brown-out Reset Enable
  1468                           ;	BOREN = OFF, Brown-out Reset disabled
  1469                           ;	Clock Out Enable
  1470                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1471                           ;	Internal/External Switchover
  1472                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1473                           ;	Fail-Safe Clock Monitor Enable
  1474                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1475     8007                     	org	32775
  1476     8007  29FC               	dw	10748
  1477                           
  1478                           ;Config register CONFIG2 @ 0x8008
  1479                           ;	Flash Memory Self-Write Protection
  1480                           ;	WRT = OFF, Write protection off
  1481                           ;	Voltage Regulator Capacitor Enable bit
  1482                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  1483                           ;	PLL Enable
  1484                           ;	PLLEN = ON, 4x PLL enabled
  1485                           ;	Stack Overflow/Underflow Reset Enable
  1486                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1487                           ;	Brown-out Reset Voltage Selection
  1488                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1489                           ;	Low Power Brown-Out Reset Enable Bit
  1490                           ;	LPBOR = OFF, Low power brown-out is disabled
  1491                           ;	In-Circuit Debugger Mode
  1492                           ;	DEBUG = 0x1, unprogrammed default
  1493                           ;	Low-Voltage Programming Enable
  1494                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1495     8008                     	org	32776
  1496     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Convert_To_Chr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4      61
                                              3 COMMON     4     0      4
                     _Convert_To_Chr
                       _Keypad_Check
                              _Setup
                      _Write_To_Port
 ---------------------------------------------------------------------------------
 (1) _Write_To_Port                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Check                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Convert_To_Chr                                       3     1      2      46
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Convert_To_Chr
   _Keypad_Check
   _Setup
   _Write_To_Port

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14      7       9     64.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       9      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Nov 14 11:07:54 2024

                     l51 076B                       l43 074C                       l46 0759  
                     l71 07DA                       l63 07AF                       l55 0784  
                     l47 07FA                       l64 07CE                       l56 07A3  
                     l48 0778                       l81 0714                       l73 07E3  
                     l65 07B8                       l57 078D                       l49 0762  
                     l75 07EC                       l67 07C1                       l59 0796  
                     l84 0719                       u10 0754                       u11 0753  
                     u20 075D                       u21 075C                       u30 0766  
                     u31 0765                       u40 076F                       u41 076E  
                     u50 077F                       u51 077E                       u60 0788  
                     u61 0787                       u70 0791                       u71 0790  
                     u80 079A                       u81 0799                       u90 07AA  
                     u91 07A9                      l700 072D                      l710 0754  
                    l702 0734                      l800 07D5                      l704 0736  
                    l722 0766                      l706 0740                      l812 07E7  
                    l740 077F                      l716 075D                      l708 074D  
                    l806 07DE                      l734 0774                      l824 07F5  
                    l752 0791                      l736 0779                      l728 076F  
                    l832 0716                      l818 07F0                      l770 07AA  
                    l746 0788                      l738 077B                      l842 071A  
                    l764 079F                      l844 071D                      l838 0711  
                    l782 07BC                      l766 07A4                      l758 079A  
                    l776 07B3                      l768 07A6                      l794 07CA  
                    l796 07CF                      l788 07C5                      l798 07D1  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RA3 0063                      u100 07B3                      u101 07B2  
                    u110 07BC                      u111 07BB                      u120 07C5  
                    u121 07C4                      u130 07D5                      u131 07D4  
                    u140 07DE                      u141 07DD                      u150 07E7  
                    u151 07E6                      u160 07F0                      u161 07EF  
                   PORTA 000C                     _LATA 010C                     _PIE1 0091  
                   _PIE2 0092                     _main 071A                     btemp 007E  
                   start 0002                    ?_main 0073                    _T1CON 0018  
                  _T2CON 001C                    _PORTA 000C                    _PORTC 000E  
                  _TRISA 008C                    _TRISC 008E                    _Setup 072D  
          ?_Keypad_Check 0070                    wtemp0 007E          __initialization 07FB  
           __end_of_main 072D                   ??_main 0077                   ?_Setup 0070  
                 _ANSELA 018C                   _ANSELC 018E           ??_Keypad_Check 0070  
       ??_Convert_To_Chr 0072            _Write_To_Port 0715                   _button 0077  
__end_of__initialization 07FD           ?_Write_To_Port 0070           __pcstackCOMMON 0070  
          __end_of_Setup 074D                  ??_Setup 0070               __pmaintext 071A  
                _CCP1CON 0293                  _CCP2CON 029A     __end_of_Keypad_Check 07FB  
        ??_Write_To_Port 0070                  __ptext1 0715                  __ptext2 072D  
                __ptext3 074D                  __ptext4 0711     end_of_initialization 07FD  
      Convert_To_Chr@Key 0072                _PORTAbits 000C       Write_To_Port@write 0070  
    start_initialization 07FB             _Keypad_Check 074D              __pbssCOMMON 0077  
              ___latbits 0003    __end_of_Write_To_Port 071A           _Convert_To_Chr 0711  
               main@argc 0073   __end_of_Convert_To_Chr 0715                 main@argv 0075  
     Convert_To_Chr@temp 0070               _OSCCONbits 0099          ?_Convert_To_Chr 0070  
